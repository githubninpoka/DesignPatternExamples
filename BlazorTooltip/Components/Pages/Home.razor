@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JS
@inject ILogger<Home> logger
@inject TooltipService tooltipService


<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

For getting Tooltips to work:
<br />
<ul>
    <li>add the correct script to app.razor. you need either the popper.js or the bundle</li>
    <li>create an element that has:</li>
    <li> - data-bs-toggle=someidentifier</li>
    <li> - data-etc -> https://getbootstrap.com/docs/5.0/components/tooltips/</li>
    <li>initialize the tooltip with javascript (see OnAfterRenderAsync)</li>
    <li>Remember: without title there is no content to the tooltip and it will not show</li>
</ul>
<br />

<button data-bs-toggle="whatever" title="The content of the tooltip" data-bs-placement="right">Hover me</button>

<p>package blazor.bootstrap  installed</p>
<ul>
    <li>followed the exact instructions at https://blazor.radzen.com/get-started?theme=material3 to set up radzen</li>
    <li>changed the Style property in the ToolTipOptions</li>
</ul>

<RadzenButton Click="@ButtonClicked" Text="Hi" MouseEnter="@(args => ShowTooltip(args) )"></RadzenButton>


@code {
    void ButtonClicked()
    {
        // Handle the Click event of RadzenButton
        logger.LogInformation("iep");

    }
    TooltipOptions tto = new TooltipOptions(){
        Style="background:green;color:purple",
        Duration=10000
    };
    void ShowTooltip(ElementReference elementReference, TooltipOptions options = null)
    {
        tooltipService.Open(elementReference, "Hello!", tto);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("eval", "new bootstrap.Tooltip(document.querySelector('[data-bs-toggle=\"whatever\"]'))");
    }


}